sdocp('interface.js.sdoc', 'Self-modifying Perl web interface | Spencer Tipping\nLicensed under the terms of the MIT source code license\n\nIntroduction.\nThis interface lets users open self-modifying Perl files as web pages. Attributes will be shown in a list, and each one can be expanded to show its value.\n\ncaterwaul.deglobalize().clone(\'std seq continuation montenegro parser\')(function ($) {\n  jQuery = fn_[$.apply(this, arguments)] /se[_.prototype = $.prototype],\n\n  $(fn_[$(\'body\').empty().append(the_interface),\n        where*[original_html = $(\'body\').html(),\n\n               parse_attributes(s) = l*[unescape(s)           = s.replace(/\\\\([\'\\\\])/g, \'$1\'),\n\n                                        namespace             = peg[c(/meta::(\\w+)/, 7) >> fn[xs][xs[1]]],\n                                        string                = peg[c(\'\\\'\') % (c(/[^\\\\\']/, 1) / (c(/\\\\(.)/, 2) >> unescape))[0] % c(\'\\\'\') >> fn[xs][xs[1]]],\n                                        here_document         = peg[c(\'<<\') % string >> fn[xs][xs[1]]],\n\n                                        invocation_common     = peg[namespace % c(\'(\') % string % c(/,\\s*/, 1) >> fn[xs][{namespace: xs[0], attribute: xs[2]}]],\n\n                                        short_form_invocation = peg[invocation_common % string % c(\');\') % c(\'\\n\') >> fn[xs][xs[0] /se[_.value = xs[1]]]],\n\n                                        long_form_invocation  = l*[beginning            = peg[invocation_common % here_document % c(\');\\n\') >> fn[xs][xs[0] /se[_.marker = xs[1]]]],\n                                                                   ending(end)          = peg[(-c(end) % c(fn_[1]))[0] % c(end) >> fn[xs][seq[~xs[0] *[_[1]]].join(\'\')]],\n                                                                   parse_heredoc(input) = l[beginning_result = beginning(input) || {result: {marker: fn_[false]}}] in\n                                                                                          ending(beginning_result.result.marker)(beginning_result)] in\n                                                                parse_heredoc,\n\n                                        attribute             = peg[short_form_invocation / long_form_invocation],\n                                        attributes            = peg[attribute[0]],\n\n                                        trim_bootstrap(s)     = s.replace(/^(?:(?!meta::).)*/, \'\')] in attributes(trim_bootstrap(s)),\n\n               the_interface = html[pre(document.createTextNode(JSON.stringify(parse_attributes(original_html))))]]])})($.noConflict(true));\n');